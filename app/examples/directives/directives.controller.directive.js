(function() {
    'use strict';
    angular.module("practice.directives")
           .directive("controllerDirective", controllerDirective);

    // always use $inject to make functions minify-able
    // @see https://docs.angularjs.org/guide/di
    controllerDirective.$inject = ["$templateCache"];

    function controllerDirective($templateCache) {
        return {
            controller: controller,
            controllerAs: "controller",
            // bind all variables directly to controller as well
            bindToController: true,
            // restrict directive only to be callable by element declaration '<simple-directive></simple-directive>'
            restrict: "E",
            scope: {
                // declares variable 'format' as one-way-binding
                format: "@",

                // declares variable 'exchange' as two-way-binding
                exchange: "="
            },
            // don't use a template file, get it from '$templateCache' instead
            template: getTemplate
        };

        function controller() {
            var self = this;

            // define public variables for own scope
            self.date = new Date();
            self.exchange = "some exchanged information";
        }

        /**
         * get template from cache
         * @returns string
         */
        function getTemplate() {
            // template cache will be generated by gulp -> gulpfile.js
            // @see https://docs.angularjs.org/api/ng/service/$templateCache
            return $templateCache.get("examples/directives/directives.controller.directive.tpl.html");
        }
    }
}());
